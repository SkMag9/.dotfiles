---
- name: "Hyprland | Checking for Available Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "Hyprland | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "Hyprland | Get Current systemd Default"
  ansible.builtin.command: 
    cmd: "systemctl get-default"
  changed_when: false
  register: systemd_default
  when: distribution_config.stat.exists

- name: "Hyprland | Set systemd Default to graphical target"
  become: true
  ansible.builtin.command:
    cmd: "systemctl set-default graphical.target"
  when: "'graphical' not in systemd_default.stdout and distribution_config.stat.exists" 
  changed_when: true

- name: "Hyprland | Remove Old Configs"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/hypr"
    state: absent
  when: distribution_config.stat.exists

- name: "Hyprland | Create Config Directory"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/hypr"
    state: directory
  when: distribution_config.stat.exists

- name: "Hyprland | Hyprland Config Link"
  ansible.builtin.file:
    src: "{{ role_path }}/files/hypr"
    dest: "{{ ansible_user_dir }}/.config/hypr"
    state: link
    force: true
  when: distribution_config.stat.exists

- name: "Waybar | Remove Old Configs"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/waybar"
    state: absent
  when: distribution_config.stat.exists

- name: "Waybar | Create Config Directory"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/waybar"
    state: directory
  when: distribution_config.stat.exists

- name: "Waybar | Waybar Config Link"
  ansible.builtin.file:
    src: "{{ role_path }}/files/waybar"
    dest: "{{ ansible_user_dir }}/.config/waybar"
    state: link
    force: true
  when: distribution_config.stat.exists
 
- name: "KiTTY | Remove Old Configs"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/kitty"
    state: absent
  when: distribution_config.stat.exists

- name: "KiTTY | Create Config Directory"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/kitty"
    state: directory
  when: distribution_config.stat.exists

- name: "KiTTY | KiTTY Config Link"
  ansible.builtin.file:
    src: "{{ role_path }}/files/kitty"
    dest: "{{ ansible_user_dir }}/.config/kitty"
    state: link
    force: true
  when: distribution_config.stat.exists

- name: "greetd | Link Config"
  become: true
  ansible.builtin.file:
    path: "/etc/greetd"
    state: absent

- name: "greetd | Create Config Directory"
  become: true
  ansible.builtin.file:
    mode: "0755"
    path: "/etc/greetd"
    state: directory

- name: "greetd | greetd Config Link"
  become: true
  ansible.builtin.file:
    src: "{{ role_path }}/files/greetd"
    dest: "/etc/greetd"
    state: link
    force: true

- name: "greetd | Enable greetd Service"
  become: true
  ansible.builtin.systemd_service:
    name: greetd
    state: started
    enabled: true

- name: "rofi | Link Config"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/rofi"
    state: absent

- name: "rofi | Create Config Directory"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/rofi"
    state: directory

- name: "rofi | rofi Config Link"
  ansible.builtin.file:
    src: "{{ role_path }}/files/rofi"
    dest: "{{ ansible_user_dir }}/.config/rofi"
    state: link
    force: true

- name: "dolphin | Link Config"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/dolphin"
    state: absent

- name: "dolphin | Create Config Directory"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/dolphin"
    state: directory

- name: "dolphin | dolphin Config Link"
  ansible.builtin.file:
    src: "{{ role_path }}/files/dolphin"
    dest: "{{ ansible_user_dir }}/.config/dolphin"
    state: link
    force: true
